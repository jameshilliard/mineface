-names = ['Accepted', 'Rejected', 'Stale', 'Discarded']
- @pools ||= []
%h3
  Pools
  %small.muted#devices_overview
    - unless @pools.empty?
      =pluralize(@pools.length, 'pool')
%table.table.table-striped.table-bordered
  %thead
    %tr
      %th Priority
      %th URL
      %th User
      %th Status
      %th=names.join('/')
  %tbody
    -if @pools.length == 0
      %tr
        %td{colspan:5}
          .text-center No pool information available
    -else
      -@pools.each do |pool|
        %tr{class: pool[:status] == :alive ? :success: pool[:status] == :disabled ? :warning: :error}
          %td
            .text-right
              =pool[:priority]
          %td=pool[:url]
          %td=pool[:user]
          %td=pool[:status].to_s.titleize
          %td
            :ruby
              keys = [:accepted, :rejected, :stale, :discarded]
              classes = %w(success warning warning danger)
              vals = keys.map{|k| pool[k]}
              total = vals.reduce(:+)
              perc = vals.map{|v| (v.to_f/total) * 100.0}
            .progress{style: 'margin-bottom: 0'}
              - keys.each_with_index do |key,index|
                .bar{style:"width: #{perc[index].round(2)}%", title: "#{names[index]}: #{vals[index]} (#{perc[index].round(2)}%)", class: "bar-#{classes[index]}"}